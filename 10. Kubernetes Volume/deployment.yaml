apiVersion: apps/v1
kind: Deployment
metadata:
  name: story-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: story
  template:
    metadata:
      labels:
        app: story
    spec:
      containers:
        - name: story 
          image: angajasinghe/10_stories:2
          env:
            # - name: STORY_FOLDER
            #   value: 'story'
            - name: STORY_FOLDER
              valueFrom:
                configMapKeyRef:
                  name: data-store-env
                  key: folder
          volumeMounts:
            - name: story-volume
              mountPath: /app/story # path in the container (you have defined in the deployment.yaml)
          resources:
            limits:
              cpu: "250m"
              memory: "512Mi"
            requests:
              cpu: "250m"
              memory: "512Mi"
      volumes:
        - name: story-volume
          # emptyDir: {} 
          # with out any custom configuration, this will crate a volume with default settings in directory
          # with this driver we cannot have same data with replications, because this will create for each pods.
          # this is good for one replica, but not good for many replicas.
          # hostPath:
          #   path: /data/story # path in the host and this will share with all replicas
          #   type: DirectoryOrCreate 
          persistentVolumeClaim:
            claimName: host-pvc # name of the PVC
---

apiVersion: v1
kind: Service
metadata:
  name: story-service
spec:
  selector:
    app: story
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
  type: LoadBalancer